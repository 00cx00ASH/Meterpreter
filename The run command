I'm going to talk about the run command separately because of the sheer amount of ready-made scripts it can run for you on the victim. It currently has 184 scripting options that you can use. Here I will mention the ones I find most useful on a daily basis. For a complete list, just type “run” at a Meterpreter prompt and type “y” followed by enter and all the scripts will be displayed for you.
First, for you to run any script, the syntax is as follows:
meterpreter > run <script>
Just replace “<script>” with the name of one of the following:
checkvm: Checks and informs if the machine where Meterpreter is running is a virtual machine. If it's a VM, it also speaks the software used to run the VM.
credcollect: This script will dump all user password hashes and also tokens. With the hashes in hand, you use John The Ripper or rainbowtables to find out what the user's password is.
enum_*: Scripts starting with “enum_” are used to do enumeration. There are several: enum_chrome, enum_firefox, enum_logged_on_users, enum_powershell_env, enum_putty, enum_shares, enum_vmware. I believe that by the name you can already understand what they do, right?
getgui: This script allows you to enable the RDP service on the victim (and create users you can log in with) so that you can use a graphical interface. After running this script you can use rdesktop for example to connect to RDP.
hostsedit: This script allows you to edit the victim's hosts file. As Windows first checks the hosts, this script is handy for when you want to redirect the victim to a fake website. Using the -e option, just inform IP and domain separated by “,” like this: 192.168.0.1,uol.com; using the -l option you can use a file with one entry per line of IP,domain, as in the -e option.
killav: I believe this is one of the most useful scripts. You may have seen that some anti-viruses delete a certain file as soon as the download is complete if it detects that the file is malicious. Apart from that some AVs nowadays provide many other services that can end up getting in your way during the attack. With this script you can kill all AVs that are running on the machine.
migrate: Let's say you've successfully exploited a flaw in the victim's Internet Explorer and gotten the shell. If this browser is closed, your connection will be closed. In order for this not to happen, you need to migrate to another process that will not be terminated. A good process to use is explorer.exe. You just need to get the PID of the process you want to migrate to. To get the PID, use the ps command discussed earlier.
persistence: After you've worked hard to get into a machine, you don't want to lose access for nothing, right? So it's always a good idea to use the persistence script so that you can get back to the machine later, even if it restarts. This is because this script creates a Meterpreter service on the victim that is started along with the machine. You have various options like starting the service when the user logs on, starting the service when the system boots, the interval between attempts to connect to the machine you specified, etc. Use “run persistence -h” to see the full list of options.
screenspy: This script takes pictures of the remote desktop at intervals predefined by you and displays the sequence of pictures taken.
webcam: Using this script you can activate the webcam and capture the images.
winenum: Performs a very thorough enumeration on the victim, giving you information like whether the target machine is a VM or not, users of the machine, etc. The entire result of this enumeration will be saved in several files inside the directory indicated in the line “[*] Output of each individual command is saved to…”.
The list above is a small sample of the possibilities created when using scripts to aid in the attack on a certain machine. The list is much longer, so I recommend that you install a few VMs in your lab and test the scripts to see how they work and what they can offer you. No doubt you'll find some that are even more interesting than the ones I've discussed.
